<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jmr.IDao.TeacherInfoMapper">
  <resultMap id="BaseResultMap" type="com.jmr.model.TeacherInfo">
    <id column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <id column="card_id" jdbcType="INTEGER" property="cardId" />
    <result column="responsible" jdbcType="VARCHAR" property="responsible" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
  </resultMap>
  <sql id="Base_Column_List">
    teacher_id, card_id, responsible, telephone, is_delete, create_by, create_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.jmr.model.TeacherInfoKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_teacher_info
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </select>
  <select id="selectByPageSQL" parameterType="int" resultType="java.util.HashMap">
	select 
    t_teacher_info.teacher_id,t_idcard.card_id,t_idcard.card_name,t_idcard.gender,t_idcard.nation,t_idcard.birthday,t_teacher.telephone,t_teacher.email,t_teacher.education,t_teacher."state",t_institutions.institutions_name
    from t_teacher_info 
    	LEFT JOIN t_teacher ON t_teacher_info.teacher_id = t_teacher.teacher_id
    	LEFT JOIN t_idcard on t_teacher_info.card_id = t_idcard.card_id
    	LEFT JOIN t_institutions_teacher on t_teacher_info.teacher_id = t_institutions_teacher.teacher_id
    	LEFT JOIN t_institutions on t_institutions_teacher.institutions_id = t_institutions.institutions_id
    where t_teacher.is_delete = 0
    and t_idcard.is_delete = 0
    and t_institutions.is_delete = 0
    <if test="start!=null and length!=null">
    	limit #{length} offset #{start}
    </if>
   </select>
   <select id="selectByPageWithName" parameterType="String" resultType="java.util.HashMap">
    select 
    t_teacher_info.teacher_id,t_idcard.card_id,t_idcard.card_name,t_idcard.gender,t_idcard.nation,t_idcard.birthday,t_teacher.telephone,t_teacher.email,t_teacher.education,t_teacher."state",t_institutions.institutions_name
    from t_teacher_info 
    	LEFT JOIN t_teacher ON t_teacher_info.teacher_id = t_teacher.teacher_id
    	LEFT JOIN t_idcard on t_teacher_info.card_id = t_idcard.card_id
    	LEFT JOIN t_institutions_teacher on t_teacher_info.teacher_id = t_institutions_teacher.teacher_id
    	LEFT JOIN t_institutions on t_institutions_teacher.institutions_id = t_institutions.institutions_id
    where t_teacher.is_delete = 0
    and t_idcard.is_delete = 0
    and t_institutions.is_delete = 0
	and t_institutions.institutions_name like #{search}
    <if test="start!=null and length!=null">
    	limit #{length} offset #{start}
    </if>
  </select>
   <select id="selectCount" resultType="int">
    select count(*)
    from t_teacher
    where is_delete = 0
  </select>
  <select id="selectFilteredCount" parameterType="String" resultType="int">
    select count(*)
    from t_teacher_info 
    	LEFT JOIN t_teacher ON t_teacher_info.teacher_id = t_teacher.teacher_id
    	LEFT JOIN t_idcard on t_teacher_info.card_id = t_idcard.card_id
    	LEFT JOIN t_institutions_teacher on t_teacher_info.teacher_id = t_institutions_teacher.teacher_id
    	LEFT JOIN t_institutions on t_institutions_teacher.institutions_id = t_institutions.institutions_id
    where t_teacher.is_delete = 0
    and t_idcard.is_delete = 0
    and t_institutions.is_delete = 0
	and t_institutions.institutions_name like #{search}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.jmr.model.TeacherInfoKey">
    delete from t_teacher_info
    where teacher_id = #{teacherId,jdbcType=INTEGER}
    and card_id = #{cardId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jmr.model.TeacherInfo">
    insert into t_teacher_info (teacher_id, card_id, responsible, 
      telephone, is_delete, create_by, 
      create_at)
    values (#{teacherId,jdbcType=INTEGER}, #{cardId,jdbcType=INTEGER}, #{responsible,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, 
      #{createAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jmr.model.TeacherInfo">
    insert into t_teacher_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="responsible != null">
        responsible,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="responsible != null">
        #{responsible,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jmr.model.TeacherInfo">
    update t_teacher_info
    <set>
      <if test="responsible != null">
        responsible = #{responsible,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where teacher_id = #{teacherId,jdbcType=INTEGER}
      and card_id = #{cardId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jmr.model.TeacherInfo">
    update t_teacher_info
    set responsible = #{responsible,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP}
    where teacher_id = #{teacherId,jdbcType=INTEGER}
      and card_id = #{cardId,jdbcType=INTEGER}
  </update>
</mapper>